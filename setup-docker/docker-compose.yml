version: "3"

services:

    redis:
        image: redis
        container_name: redis_con
        hostname: redis
        restart: always
        ports:
          - "6379:6379"
        networks:
          - backend

    pgadmin:
      image: dpage/pgadmin4
      container_name: pg_con
      hostname: pg
      restart: always
      environment:
        PGADMIN_DEFAULT_EMAIL: admin@jb.dev
        PGADMIN_DEFAULT_PASSWORD: jb12345678
      ports:
        - "5050:80"
      networks:
        - backend

    db:
      image: postgres:13.7
      container_name: db_con
      hostname: db
      restart: always
      ports:
        - "5432:5432"
      environment:
        - POSTGRES_USER=jb
        - POSTGRES_PASSWORD=12345678
        - POSTGRES_DB=init
      networks:
        - backend

    influxdb:
      image: influxdb:latest
      container_name: influx_con
      hostname: influx
      restart: always
      ports:
        - "8086:8086"
      volumes:
        - ./influx_backup:/var/lib/influxdb
        - .:/repo/
      environment:
        - DOCKER_INFLUXDB_INIT_USERNAME=admin
        - DOCKER_INFLUXDB_INIT_PASSWORD=password
        - DOCKER_INFLUXDB_INIT_ORG=jb
        - DOCKER_INFLUXDB_INIT_BUCKET=demo
      networks:
        - backend

    mssql:
      image: "mcr.microsoft.com/mssql/server:2022-latest"
      container_name: mssql_con
      hostname: mssql
      restart: always
      environment:
        - ACCEPT_EULA=Y
        - SA_PASSWORD=12345678
      volumes:
        - ./mssql_backup:/var/lib/mssql
      ports:
        - "1433:1433"

    portainer:
        image: portainer/portainer-ce:latest
        container_name: portainer_con
        hostname: portainer
        restart: always
        ports:
          - 9443:9443
        volumes:
          - data:/data
          - /var/run/docker.sock:/var/run/docker.sock

    grafana:
        image: grafana/grafana:7.5.7
        ports:
          - "3000:3000"
        restart: always
        volumes:
          - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
          - grafana-data:/var/lib/grafana

volumes:
  data:
  grafana-data:
networks:
  backend:
    driver: bridge
